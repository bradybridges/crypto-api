export const coinDataFetch = 'export const getCoinData = async () => {\n'
  +'  const response = await fetch(\'https://heroku-coin-api.herokuapp.com/api/v1/coindata\');\n'
  +'  if(!response) {\n'
  +'    throw Error(\'Failed to fetch coin data\');\n'
  +'  } else {\n'
  +'    const coinData = await response.json();\n'
  +'    return coinData;\n'
  +'  }\n'
  +'}\n'
  +'getCoinData();';

export const dateCoinFetch = 'export const getCoinDataOnDate = async (date) => {\n'
  +'const response = await fetch(`https://heroku-coin-api.herokuapp.com/api/v1/coindata/date/${date}`);\n'
  +'  if(!response) {\n'
  +'    return Error(\'Could not fetch coin info\');\n'
  +'  } else {\n'
  +'    const dateData = await response.json();\n'
  +'    return dateData\n'
  +'  }\n'
  +'}\n'
  +'getCoinDataOnDate(\'2019-11-10\');';

export const nameCoinFetch = 'export const getCoinDataByName = async (name) => {\n'
  +'const response = await fetch(`https://heroku-coin-api.herokuapp.com/api/v1/coindata/name/${name}`);\n'
  +'  if(!response.ok) {\n'
  +'    return Error(\'Coin not found\');\n'
  +'  } else {\n'
  +'    const user = await response.json();\n'
  +'    return user;\n'
  +'  }\n'
  +'}\n'
  +'getCoinDataByName(\'Bitcoin\')';

export const usersFetch = 'export const getUsers = async () => {\n'
  +'const response = await fetch(\'https://heroku-coin-api.herokuapp.com/api/v1/users\');\n'
  +'  if(!response) {\n'
  +'    return Error(\'Unable to fetch users\');\n'
  +'  } else {\n'
  +'    const users = await response.json();\n'
  +'    return users;\n'
  +'  }\n'
  +'}\n'
  +'getUsers();';

export const userFetch = 'export const getUser = async (username) => {'
  +'const response = await fetch(`https://heroku-coin-api.herokuapp.com/api/v1/users/${username}`);\n'
  +'  if(!response) {\n'
  +'    return Error(\'User not found\');\n'
  +'  } else {\n'
  +'    const user = await response.json();\n'
  +'    return user;\n'
  +'  }\n'
  +'}\n'
  +'getUser(\'Arya\');';

export const deleteUser = 'const deleteUser = async (username) => {\n'
  +'  const response = await fetch(\'https://heroku-coin-api.herokuapp.com/api/v1/users\', {\n'
  +'    method: \'DELETE\',\n'
  +'    headers: { \'content-type\': \'application/json\'},\n'
  +'    body: JSON.stringify({\n'
  +'      username\n'
  +'    })\n'
  +'  });\n'
  +'  if(!response.ok) {\n'
  +'    return Error(\'Failed to delete user\');\n'
  +'  }\n'
  +'  const resp = await response.json();\n'
  +'  return resp;\n'
  +'}\n'
  +'console.log(deleteUser(\'Arya\')';

export const deleteRecord = 'export const deleteRecord = async (date) => {\n'
  +'  const response = await fetch(\'https://heroku-coin-api.herokuapp.com/api/v1/coin\', {\n'
  +'    method: \'DELETE\',\n'
  +'    headers: { \'content-type\': \'application/json\' },\n'
  +'    body: JSON.stringify({ date })\n'
  +'  })\n'
  +'  if(!response.ok) {\n'
  +'     return Error(\'Failed to delete record\');\n'
  +'  }\n'
  +'  const resp = await response.json();\n'
  +'  return resp;\n'
  +'}\n'
  +'console.log(deleteRecord(\'2019-10-10\')'

  export const insertRecord = 'export const insertRecord = async (name, date, price, marketCap, coinId) => {\n'
  +'  const response = await fetch(\'https://heroku-coin-api.herokuapp.com/api/v1/coindate\', {\n'
  +'    method: \'POST\',\n'
  +'    headers: { \'content-type\': \'application/json\' },\n'
  +'    body: JSON.stringify({\n'
  +'      name,\n'
  +'      date,\n'
  +'      price,\n'
  +'      marketCap,\n'
  +'      coinId\n'
  +'    })\n'
  +'  });\n'
  +'  if(!response.ok) {\n'
  +'  return Error(\'Failed To Insert Record\');\n'
  +'  }\n'
  +'  const resp = response.json();\n'
  +'  return resp;\n'
  +'}\n'
  +'console.log(insertRecord(\'Bitcoin\', \'2019-11-29\', 120.00, 123456.03, 1));';

  export const insertUser = 'export const insertUser = async (username, coinname, qty, coinId) => {\n'
    +'  const response = await fetch(\'https://heroku-coin-api.herokuapp.com/api/users\', {\n'
    +'    method: \'POST\',\n'
    +'    headers: {\'application/json\'},\n'
    +'    body: JSON.stringify({\n'
    +'      coinname,\n'
    +'      qty,\n'
    +'      coinId,\n'
    +'      username\n'
    +'    })\n'
    +'  });\n'
    +'  if(!response.ok) {\n'
    +'    return Error(\'Failed to inert User\');\n'
    +'   }\n'
    +'  const resp = await response.json();\n'
    +'  return resp;\n'
    +'}\n'
    +'console.log(insertUser(\'Jarold\', \'Bitcoin\', 150, 1));';